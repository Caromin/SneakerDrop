// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SneakerDrop.Code;

namespace SneakerDrop.Code.SneakerDropMigrate
{
    [DbContext(typeof(SneakerDropDbContext))]
    partial class SneakerDropDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SneakerDrop.Domain.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("AddressId");

                    b.ToTable("Address","User");
                });

            modelBuilder.Entity("SneakerDrop.Domain.Models.Listing", b =>
                {
                    b.Property<int>("ListingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrdersOrderId");

                    b.Property<int>("Quantity");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("UserSetPrice");

                    b.HasKey("ListingId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("Listing","Store");
                });

            modelBuilder.Entity("SneakerDrop.Domain.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderGroupNumber");

                    b.Property<int>("Quantity");

                    b.Property<string>("ShippingStatus")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("OrderId");

                    b.ToTable("Orders","User");
                });

            modelBuilder.Entity("SneakerDrop.Domain.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CCNumber");

                    b.Property<string>("CCUserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("CVV");

                    b.Property<int>("Month");

                    b.Property<int?>("OrdersOrderId");

                    b.Property<int>("Year");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrdersOrderId");

                    b.ToTable("Payment","User");
                });

            modelBuilder.Entity("SneakerDrop.Domain.Models.ProductInfo", b =>
                {
                    b.Property<int>("ProductInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("DisplayPrice");

                    b.Property<int?>("ListingId");

                    b.Property<string>("ProductTitle")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ProductInfoId");

                    b.HasIndex("ListingId");

                    b.ToTable("Product","Store");
                });

            modelBuilder.Entity("SneakerDrop.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ListingId");

                    b.Property<int?>("OrdersOrderId");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PaymentId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.HasIndex("AddressId");

                    b.HasIndex("ListingId");

                    b.HasIndex("OrdersOrderId");

                    b.HasIndex("PaymentId");

                    b.ToTable("User","User");
                });

            modelBuilder.Entity("SneakerDrop.Domain.Models.Listing", b =>
                {
                    b.HasOne("SneakerDrop.Domain.Models.Orders", "Orders")
                        .WithMany()
                        .HasForeignKey("OrdersOrderId");
                });

            modelBuilder.Entity("SneakerDrop.Domain.Models.Payment", b =>
                {
                    b.HasOne("SneakerDrop.Domain.Models.Orders", "Orders")
                        .WithMany()
                        .HasForeignKey("OrdersOrderId");
                });

            modelBuilder.Entity("SneakerDrop.Domain.Models.ProductInfo", b =>
                {
                    b.HasOne("SneakerDrop.Domain.Models.Listing", "Listing")
                        .WithMany()
                        .HasForeignKey("ListingId");
                });

            modelBuilder.Entity("SneakerDrop.Domain.Models.User", b =>
                {
                    b.HasOne("SneakerDrop.Domain.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("SneakerDrop.Domain.Models.Listing", "Listing")
                        .WithMany()
                        .HasForeignKey("ListingId");

                    b.HasOne("SneakerDrop.Domain.Models.Orders", "Orders")
                        .WithMany()
                        .HasForeignKey("OrdersOrderId");

                    b.HasOne("SneakerDrop.Domain.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");
                });
#pragma warning restore 612, 618
        }
    }
}
